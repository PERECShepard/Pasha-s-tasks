#include <iostream>
#include "randomEngine.cpp"
#include "player.cpp"

class NumberGame{
    int randNumber;
    RandomEngine randomEngine;
    Player human;
    Player pc;
public:
    NumberGame() : human(false), pc(true){}
    void run(){
        int turns;
        std::cout << "Please enter count amount of numbers: ";
        std::cin >> turns;
        while(human.is_playable() || pc.is_playable()) {
            std::cout << "Now u have: " << human.getScore() << std::endl
                << "and pc have: " << pc.getScore() << std::endl;
            for(int i = 0; i < turns; ++i) {
                human.addNumbers(getPlayerInput());
                pc.addNumbers(calcComputerTurn());
            }
            randNumber = randomEngine.getRandomNumber();

            int absComputer = std::abs(sum(pc) - randNumber);
            int absHuman = std::abs(sum(human) - randNumber);

            std::cout << "Game begin" << std::endl
                      << "Pc chose: " ; pc.showNumbers();
            std::cout <<  "Your choice: "; human.showNumbers();
            std::cout << "Number: " << randNumber << std::endl;

            if (absComputer == absHuman) {
                defineWinnerByRange();
            } else {
                defineWinnerByAbs(absComputer, absHuman);
            }
            human.getScore();
            pc.getScore();
        }
    }

    int getPlayerInput(){
            std::cout << "Please enter number between 1 - 20 range:";
            int number;
            while (std::cin >> number && !(number >= 1 && number <= 20)) {
                std::cout << "Invalid input. Repeat.";
            }
            return number;
    }

    int calcComputerTurn(){
        int pc_value;
        pc_value = randomEngine.getRandomNumber();
        if(pc_value )
        return pc_value;
    }

    int sum(const Player &player){
        int sum = 0;
        const std::vector<int>& nums = player.getNumbers();
        for (auto it = nums.begin(); it != nums.end(); ++it) {
            sum += *it;
        }
        return sum;
    }

    void defineWinnerByRange(){
        if(human.findMinValue() < pc.findMinValue()){
            std::cout << "U R win because your number were less" << std::endl;
            human.winBalance();
            pc.loseBalance();
        }else {
            std::cout << "PC win because his number were less" << std::endl;
            pc.winBalance();
            human.loseBalance();
        }
    }

    void defineWinnerByAbs(int humAbs, int compAbs){
        if(humAbs > compAbs){
            std::cout << "U R win because your number were closer" << std::endl;
            human.winBalance();
            pc.loseBalance();
        }else {
            std::cout << "PC win because his number was closer" << std::endl;
            pc.winBalance();
            human.loseBalance();
        }
    }
};

int main() {
    NumberGame game;
    game.run();
}
