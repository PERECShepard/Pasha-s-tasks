#include <iostream>
#include "balance.cpp"
#include "randomEngine.cpp"

struct Character{
    int humanNumber1;
    int humanNumber2;
    int pcValue1;
    int pcValue2;
};

class NumberGame{
    int randNumber;
    Balance balance = Balance(1000, 1000);
    RandomEngine randomEngine;
public:
    void run(){
        while(balance.getHumanScoreBalance() >= 0 || balance.getPcScoreBalance() >= 0) {
            std::cout << balance.getHumanScoreBalance();
            Character ch;
            getPlayerInput(ch);
            calcComputerTurn(ch);
            randNumber = randomEngine.getRandomNumber();

            int absComputer = std::abs(ch.pcValue1 + ch.pcValue2 - randNumber);
            //std::cout << absComputer1 << " " << absComputer2 << " " << absComputerMin << std::endl;
            int absHuman = std::abs(ch.humanNumber1 + ch.humanNumber2 - randNumber);
            //std::cout << absHuman1 << " " << absHuman2 << " " << absHumanMin;

            std::cout << "Game begin" << std::endl
                      << "Pc chose: " << ch.pcValue1 << " and " << ch.pcValue2 << std::endl
                      << "Your choice: " << ch.humanNumber1 << " and " << ch.humanNumber2 << std::endl
                      << "Number: " << randNumber << std::endl;

            if (absComputer == absHuman) {
                defineWinnerByRange(ch);
            } else {
                defineWinnerByAbs(absComputer, absHuman);
            }
            balance.showBalance();
        }
    }

    Character getPlayerInput(Character &humCh){
        std::cout << "Please enter 2 numbers between 1 - 20 range:";
        while(std::cin >> humCh.humanNumber1 && std::cin >> humCh.humanNumber2 && !(humCh.humanNumber1 >= 1 && humCh.humanNumber1 <= 20)
              || !(humCh.humanNumber2 >= 1 && humCh.humanNumber2 <= 20) || humCh.humanNumber1 == humCh.humanNumber2){
            std::cout << "Invalid input. Repeat.";
        }
        return humCh;
    }

    Character calcComputerTurn(Character &pcCh){
        pcCh.pcValue1 = randomEngine.getRandomNumber();
        pcCh.pcValue2 = randomEngine.getRandomNumber();
        while(pcCh.pcValue1 == pcCh.pcValue2){
            pcCh.pcValue1 = randomEngine.getRandomNumber();
        }
        return pcCh;
    }

    void defineWinnerByRange(Character &ch){
        int humanMin = ch.humanNumber1 < ch.humanNumber2 ? ch.humanNumber1 : ch.humanNumber2;
        int pcMin = ch.pcValue1 < ch.pcValue2 ? ch.pcValue1 : ch.pcValue2;
        if(humanMin < pcMin){
            std::cout << "U R win because your number were less" << std::endl;
            balance.humWinBalance();
        }else {
            std::cout << "PC win because his number were less" << std::endl;
            balance.computerWinBalance();
        }
    }

    void defineWinnerByAbs(int humAbs, int compAbs){
        if(humAbs > compAbs){
            std::cout << "U R win because your number were closer" << std::endl;
            balance.humWinBalance();
        }else {
            std::cout << "PC win because his number was closer" << std::endl;
            balance.computerWinBalance();
        }
    }
};

int main() {
    NumberGame game;
    game.run();
}
