#include <random>
#include <chrono>
#include <iostream>

class Balance{
    int human_score;
    int pc_score;
public:
    Balance(int humScore, int compScore){
        human_score = humScore;
        pc_score = compScore;
    }
    void showBalance() const{
        std::cout << "Human:_" << human_score << std::endl;
        std::cout << "Computer:_" << pc_score << std::endl;
    }
    void humWinBalance(){
        human_score += 100;
        pc_score -= 100;
    }
    void pcWinBalance(){
        human_score -= 100;
        pc_score += 100;
    }

};

class NumberGame{
    int computerChoice;
    int randNumber;
    int humanChoice;
    std::mt19937 gen;
    std::uniform_int_distribution<> distrib;
    Balance balance = Balance(1000, 1000);
public:
    NumberGame(): gen{std::random_device{}()}, distrib{1, 10}{}
    void run(){
        humanChoice = getPlayerInput();
        computerChoice = calcComputerTurn(humanChoice);
        randNumber = distrib(gen);
        int absComputer = std::abs(computerChoice - randNumber);
        int absHuman = std::abs(humanChoice - randNumber);
        std::cout << "Game begin" << std::endl
                  << "Pc chose: " << computerChoice <<std::endl
                  << "Your choice: " << humanChoice << std::endl
                  << "Number: " << randNumber << std::endl;
        if(absComputer == absHuman){
            defineWinnerByRange(humanChoice, computerChoice);
        }else {
            defineWinnerByAbs(absHuman, absComputer);
        }
        balance.showBalance();
    }
    int getPlayerInput(){
        int number;
        std::cout << "Please enter the number between 1 - 10 range:";
        while(std::cin >> number && !(number >= 1 && number <= 10)){
            std::cout << "Invalid input. Repeat.";
        }
        return number;
    }
    int calcComputerTurn(int humanNumb){
        while(computerChoice == humanNumb){
            computerChoice = distrib(gen);
        }
        return computerChoice;
    }
    void defineWinnerByRange(int compChoice, int humChoice){
        if(humChoice < compChoice){
            std::cout << "U R win because your number were less" << std::endl;
            balance.humWinBalance();
        }else {
            std::cout << "PC win because his number were less" << std::endl;
            balance.pcWinBalance();
        }
    }
    void defineWinnerByAbs(int humAbs, int compAbs){
        if(humAbs < compAbs){
            std::cout << "U R win because your number were closer" << std::endl;
            balance.humWinBalance();
        }else {
            std::cout << "PC win because his number was closer" << std::endl;
            balance.pcWinBalance();
        }
    }
};

int main() {
    std::random_device device;
    NumberGame game;
    game.run();
}
